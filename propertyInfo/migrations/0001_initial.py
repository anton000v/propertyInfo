# Generated by Django 2.2.5 on 2019-09-27 13:23

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NewBuilding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=1, max_length=200, verbose_name='Название')),
                ('address', models.CharField(default=1, max_length=200, verbose_name='Адрес')),
                ('administrativeDistrict', models.CharField(choices=[('nc', 'Не заполнено'), ('mo', 'Московский'), ('ki', 'Киевский'), ('sh', 'Шевченковский'), ('sl', 'Слободской'), ('os', 'Основянский'), ('ne', 'Немышлянский'), ('ho', 'Холодногорский'), ('no', 'Новобоварский'), ('in', 'Индустриальный')], default='nc', max_length=2, verbose_name='Административный район')),
                ('district', models.CharField(choices=[('nc', 'Не заполнено'), ('Центр', (('ce', 'Центр'), ('gos', 'Госпром'), ('nag', 'Нагорный'), ('sog', 'Сосновая горка'), ('sok', 'Сокольники'), ('sha', 'Шатиловка'), ('nam', 'Научная метро'), ('nic', 'Нижний центр'), ('pcm', 'Площадь Конституции метро'), ('pum', 'Пушкинская метро'))), ('Прилегающие к центру', (('ujd', 'ЮЖД'), ('cer', 'Центральный рынок'))), ('Гагарина (Левада)', (('gam', 'Спортивная метро'), ('spm', 'Спортивная метро'), ('noc', 'Новый цирк'), ('kor', 'Конный рынок'), ('zum', 'Защитников Украины метро'))), ('Одесская районы', (('ode', 'Одесская'), ('osn', 'Основа'), ('aer', 'Аэропорт'), ('arp', 'Артема парк'), ('zmm', 'Завод Малышева метро'), ('ujn', 'Южнопроэктная'))), ('Холодногорское направление', (('hog', 'Холодная гора'), ('lig', 'Лысая гора'), ('zal', 'Залютино'), ('bav', 'Бавария'), ('nov', 'Новоселовека'), ('pes', 'Песочин'))), ('Новожановское направление', (('nov', 'Новожаново'), ('zam', 'Завод Шевченко'), ('mos', 'Москалевка'))), ('Роганское направление', (('htz', 'ХТЗ'), ('inm', 'Индустриальная метро'), ('htm', 'ХТЗ метро'), ('vop', 'Восточный поселок'), ('rog', 'Рогань'), ('gor', 'Горизонт'), ('sol', 'Солнечный'), ('nop', 'Новозападный поселок'))), ('Пятихатское направление', (('jup', 'Жуковского поселок'), ('les', 'Лесопарк'), ('pya', 'Пятихатки'))), ('Салтовское направление', (('sal', 'Салтовка'), ('ses', 'Северная Салтовка'), ('sts', 'Старая Салтовка'), ('sad', 'Сабурова Дача'), ('frb', 'Французский Бульвар'), ('kip', 'Кирова поселок'), ('kul', 'Кулиничи'), ('tur', 'Тюринка'), ('bod', 'Большая Даниловка'), ('nem', 'Немышля'), ('jur', 'Журавлевка'), ('kim', 'Киевская метро'), ('shi', 'Шишковка'), ('mjk', 'МЖК'))), ('Алексеевское направление', (('ale', 'Алексеевка'), ('pap', 'Павловое Поле'), ('pav', 'Павловка'), ('sor', 'Сортировка'), ('iva', 'Ивановка'))), ('Новые Дома', (('nod', 'Новые Дома'), ('kor', 'Коммунальный Рынок'), ('dvs', 'Дворец Спорта'), ('22b', '22 Больница'), ('mam', 'Масельского метро'), ('arm', 'Армейская метро'), ('mpm', 'Московский Проспект метро')))], default='nc', max_length=4, verbose_name='Район')),
                ('micro_district', models.CharField(max_length=4)),
                ('location', models.CharField(default=1, max_length=200, verbose_name='Расположение')),
                ('developer', models.CharField(default=1, max_length=100, verbose_name='Застройщик')),
                ('theClass', models.CharField(choices=[('nc', 'Не заполнено'), ('ec', 'Эконом'), ('co', 'Комфорт'), ('bu', 'Бизнес'), ('pr', 'Премиум'), ('el', 'Элит'), ('de', 'Делюкс'), ('to', 'Townhouse')], default='nc', max_length=2, verbose_name='Класс')),
                ('numberOfStoreys', models.PositiveSmallIntegerField(default=1, verbose_name='Этажность')),
                ('numberOfBuildings', models.PositiveSmallIntegerField(default=1, verbose_name='Количество домов')),
                ('numberOfSectionsOrEntrances', models.CharField(default=1, max_length=100, verbose_name='Количество секций/подьездов')),
                ('constructionTechnology', models.CharField(choices=[('nc', 'Не заполнено'), ('br', 'Кирпичная кладка'), ('mf', 'Монолитно-каркасная'), ('pa', 'Панельная')], default='nc', max_length=2, verbose_name='Технология строительства')),
                ('wallsType', models.CharField(choices=[('nc', 'Не заполнено'), ('br', 'Кирпич'), ('gb', 'Газоблок'), ('pb', 'Керамоблок')], default='nc', max_length=2, verbose_name='Стены')),
                ('warming', models.CharField(choices=[('nc', 'Не заполнено'), ('st', 'Пенопласт'), ('ep', 'Пенополистирол'), ('mw', 'Минеральная вата'), ('ot', 'Другое')], default='nc', max_length=2, verbose_name='Утепление')),
                ('roomHeight', models.PositiveSmallIntegerField(default=1, verbose_name='Высота помещений')),
                ('numberOfApartmentsInTheHouse', models.PositiveSmallIntegerField(default=1, verbose_name='Кол-во квартир в доме')),
                ('numberOfOneRoom', models.PositiveSmallIntegerField(default=1, verbose_name='Кол-во 1к.кв.')),
                ('squareOfOneRoom', models.PositiveSmallIntegerField(default=1, verbose_name='Площадь 1к.кв.')),
                ('numberOfTwoRoom', models.PositiveSmallIntegerField(default=1, verbose_name='Кол-во 2к.кв.')),
                ('squareOfTwoRoom', models.PositiveSmallIntegerField(default=1, verbose_name='Площадь 2к.кв.')),
                ('numberOfThreeRoom', models.PositiveSmallIntegerField(default=1, verbose_name='Кол-во 3к.кв.')),
                ('squareOfThreeRoom', models.PositiveSmallIntegerField(default=1, verbose_name='Площадь 3к.кв.')),
                ('numberOfFourRoom', models.PositiveSmallIntegerField(default=1, verbose_name='Кол-во 4к.кв.')),
                ('squareOfFourRoom', models.PositiveSmallIntegerField(default=1, verbose_name='Площадь 4к.кв.')),
                ('numberOfApartmensPerFloor', models.PositiveSmallIntegerField(default=1, verbose_name='Кол-во квартир на этаже')),
                ('commercialPremises', models.PositiveSmallIntegerField(default=1, null=True, verbose_name='Коммерческие помещения')),
                ('heating', models.CharField(choices=[('nc', 'Не заполнено'), ('ce', 'Центральное'), ('ag', 'Автономное газовое'), ('ae', 'Автономное электрическое'), ('ah', 'Автономное на дом')], default='nc', max_length=2, verbose_name='Отопление')),
                ('gasification', models.BooleanField(default=1, verbose_name='Газификация')),
                ('elevator', models.CharField(default=1, max_length=50, verbose_name='Лифт')),
                ('parking', multiselectfield.db.fields.MultiSelectField(choices=[('nc', 'Не заполнено'), ('un', 'Подземный'), ('gr', 'Наземный'), ('gu', 'Гостевой'), ('bk', 'Велопарковки')], default='nc', max_length=14, verbose_name='Паркинг')),
                ('numberOfParkingSpaces', models.SmallIntegerField(default=1, verbose_name='Кол-во машиномест')),
                ('price', models.SmallIntegerField(default=1, verbose_name='Цена за м2 у застройщика')),
                ('completionDate', models.SmallIntegerField(default=1, verbose_name='Сдан и принят в эксплуатацию')),
                ('description', models.TextField(default=1, verbose_name='Описание')),
                ('slug', models.SlugField(default='def', max_length=40)),
            ],
            options={
                'db_table': 'NewBuildings',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='wayFromMetro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metroChoices', models.CharField(choices=[('nc', 'Не заполнено'), ('Салтовская линия', (('gtr', 'Героев Труда'), ('stk', 'Студенческая'), ('akp', 'Академика Павлова'), ('akb', 'Академика Барабашова'), ('kie', 'Киевская'), ('psh', 'Пушкинская'), ('uni', 'Университет'), ('ism', 'Исторический Музей'))), ('Алексеевская линия', (('pob', 'Победа'), ('ale', 'Алексеевская'), ('23a', '23 Августа'), ('bts', 'Ботанический сад'), ('nau', 'Научная'), ('gos', 'Госпром'), ('arb', 'Архитектора Бикетова'), ('zau', 'Защитников Украины'), ('met', 'Метростроителей'))), ('Холодногорско-Заводская линия', (('hog', 'Холодная Гора'), ('ujv', 'Южный Вокзал'), ('cer', 'Центральный рынок'), ('plk', 'Площадь Конституции'), ('prg', 'Проспект Гагарина'), ('spo', 'Спортинвая'), ('zim', 'Завод имени Малышева'), ('mop', 'Московский Проспект'), ('dvs', 'Дворец Спорта'), ('arm', 'Армейская'), ('imm', 'Имени А.С. Масельского'), ('trz', 'Тракторный Завод'), ('ind', 'Индустриальная')))], default='nc', max_length=3, verbose_name='Метро')),
                ('time', models.SmallIntegerField(default=1, verbose_name='Время')),
                ('typeOfMovement', models.CharField(choices=[('nc', 'Не заполнено'), ('of', 'Пешком'), ('bc', 'На машине')], default='nc', max_length=2, verbose_name='Как')),
                ('numberOfMeters', models.SmallIntegerField(default=1, verbose_name='Расстояние')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wayFromMetro', to='propertyInfo.NewBuilding')),
            ],
        ),
        migrations.CreateModel(
            name='layoutImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layoutImage', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Планировки')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layoutImages', to='propertyInfo.NewBuilding')),
            ],
        ),
        migrations.CreateModel(
            name='buildingImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buildingImage', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildingImages', to='propertyInfo.NewBuilding')),
            ],
        ),
    ]
